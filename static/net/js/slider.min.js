/*scroll滚动图*/
;(function($) {
    $.fn.carousel = function(o) {
        o = $.extend({
                btnPrev: null,
                btnNext: null,
                btnGo: null,
                auto: false,
                speed: 500,
                easing: null,
                vertical: false,
                circular: true,
                visible: 1,
                start: 0,
                scroll: 1,
                beforeStart: null,
                afterEnd: null
            },
            o || {});
        return this.each(function() {
            var b = false,
                animCss = o.vertical ? "top": "left",
                sizeCss = o.vertical ? "height": "width";
            var c = $(this),
                ul = $("ul", c),
                tLi = $("li", ul),
                tl = tLi.size(),
                v = o.visible;
            if(tl <= v){
                o.btnNext.addClass('vhidden');
                o.btnPrev.addClass('vhidden');
                return false;
            }
            if (o.circular) {
                ul.prepend(tLi.slice(tl - v - 1 + 1).clone()).append(tLi.slice(0, v).clone());
                o.start += v;
            }
            var f = $("li", ul),
                itemLength = f.size(),
                curr = o.start;
            c.css("visibility", "visible");
            f.css({
                overflow: "hidden",
                float: o.vertical ? "none": "left"
            });
            ul.css({
                margin: "0",
                padding: "0",
                position: "relative",
                "list-style-type": "none",
                "z-index": "1"
            });
            c.css({
                overflow: "hidden",
                position: "relative",
                "z-index": "2",
                left: "0px"
            });
            var g = o.vertical ? f.height() : f.width();
            var h = g * itemLength;
            var j = g * v;
            var interval =setInterval(function(){});
            f.css({
                width: f.width()
            });
            ul.css(sizeCss, h + "px").css(animCss, -(curr * g));
            c.css(sizeCss, j + "px");

            if (o.btnPrev) $(o.btnPrev,c.parent().parent()).click(function() {
                return go(curr - o.scroll);
            });
            if (o.btnNext) $(o.btnNext,c.parent().parent()).click(function() {
                return go(curr + o.scroll);
            });
            c.hover(function(){
                if(interval)
                    clearInterval(interval);
            },function(){
                if(!o.auto) return;
                interval = setInterval(function() {
                    go(curr + o.scroll);
                },o.auto + o.speed);
            });
            var time;
            if (o.btnGo) $.each($(o.btnGo,c.parent().parent()),
                function(i, a) {
                    /*
                     $(a).click(function(){
                     go(o.circular ? o.visible * (i+1): i)
                     })*/
                    $(a).hover(function() {
                        clearInterval(interval);
                        time = setTimeout(function(){
                            go(o.circular ? o.visible * (i+1): i)  ;
                        },100) ;
                    },function(){
                        clearTimeout(time);
                        if(!o.auto) return;
                        interval = setInterval(function() {
                            go(curr + o.scroll);
                        },o.auto + o.speed);
                    });
                });
            if(o.auto){
                interval = setInterval(function() {
                    go(curr + o.scroll);
                },o.auto + o.speed);
            }
            function vis() {
                return f.slice(curr).slice(0, v);
            };
            function go(a) {
                if (!b) {
                    if (o.circular) {
                        if (a <= o.start - v - 1) {
                            ul.css(animCss, -((itemLength - (v * 2)) * g) + "px");
                            curr = a == o.start - v - 1 ? itemLength - (v * 2) - 1 : itemLength - (v * 2) - o.scroll;
                        } else if (a >= itemLength - v + 1) {
                            ul.css(animCss, -((v) * g) + "px");
                            curr = a == itemLength - v + 1 ? v + 1 : v + o.scroll;
                        } else curr = a;
                    } else {
                        if (a < 0 || a > itemLength - v) return;
                        else curr = a;
                    }
                    if (o.beforeStart) o.beforeStart.call(this, vis(),curr,tl);
                    b = true;

                    ul.animate(animCss == "left" ? {
                        left: -(curr * g)
                    }: {
                        top: -(curr * g)
                    },o.speed, o.easing,function() {
                        if (o.afterEnd) o.afterEnd.call(this, vis(),curr,tl);
                        b = false;
                    });

                    if (!o.circular) {
                        $(o.btnPrev + "," + o.btnNext).removeClass("disabled");
                        $((curr - o.scroll < 0 && o.btnPrev) || (curr + o.scroll > itemLength - v && o.btnNext) || []).addClass("disabled");
                    }
                }
                return false;
            }
        });
    };
    function css(a, b) {
        return parseInt($.css(a[0], b)) || 0;
    };
})(jQuery);